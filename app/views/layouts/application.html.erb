<!DOCTYPE html>
<html>
<head>
  <title>Grand Send Station</title>
  <%= stylesheet_link_tag "application", :media => "all" %>
  <%= javascript_include_tag "application" %>
 
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>

      <script type="text/javascript">
        // Only executed our code once the DOM is ready.
        window.onload = function() {
            // Get a reference to the canvas object
            var canvas = document.getElementById('myCanvas');
            // Create an empty project and a view for the canvas:
            paper.setup(canvas);

            var myPath = new paper.Path();
            myPath.strokeColor = 'black';

            // Draw the view now:
            paper.view.draw();

            var tool = new paper.Tool();

            tool.onMouseDown = function(event) {
                myPath.add(event.point);
            }





// from the internet /////////////////

            var canvas = document.getElementById("canvas"),
            ctx = canvas.getContext("2d");

            canvas.width = 903;
            canvas.height = 657;


            var background = new Image();
            background.src = "http://www.samskirrow.com/background.png";

          // Make sure the image is loaded first otherwise nothing will draw.
          background.onload = function(){
            ctx.drawImage(background,0,0);   
          }â€‹

          // draw whatever else over top of it on the canvas.

////////end////////////////////////





            // var path;

            // var textItem = new PointText({
            //   content: 'Click and drag to draw a line.',
            //   point: new Point(20, 30),
            //   fillColor: 'black',
            // });

      //       function onMouseDown(event) {
      //   // If we produced a path before, deselect it:
      //   if (path) {
      //     path.selected = false;
      //   }

      //   // Create a new path and set its stroke color to black:
      //   path = new Path({
      //     segments: [event.point],
      //     strokeColor: 'black',
      //     // Select the path, so we can see its segment points:
      //     fullySelected: true
      //   });
      // }

      // While the user drags the mouse, points are added to the path
      // at the position of the mouse:
      function onMouseDrag(event) {
        myPath.add(event.point);

        // Update the content of the text item to show how many
        // segments it has:
        textItem.content = 'Segment count: ' + myPath.segments.length;
      }

      // When the mouse is released, we simplify the path:
      function onMouseUp(event) {
        var segmentCount = path.segments.length;

        // When the mouse is released, simplify it:
        myPath.simplify(10);

        // Select the path, so we can see its segments:
        path.fullySelected = true;

        var newSegmentCount = path.segments.length;
        var difference = segmentCount - newSegmentCount;
        var percentage = 100 - Math.round(newSegmentCount / segmentCount * 100);
        textItem.content = difference + ' of the ' + segmentCount + ' segments were removed. Saving ' + percentage + '%';
      }










}
</script>
</head>
<body>
  <%= render 'layouts/nav' %>
  <%= flash[:notice] %>
  <div class="spacer-main">
    &nbsp;
    &nbsp;
  </div>

  <section class="container">
    <div class="grid">


      <%#= render 'layouts/messages' %>

      <%= yield %>

    </div>
  </section>
</body>
</html>

