<!DOCTYPE html>
<html>
<head>
  <title>Grand Send Station</title>
  <%= stylesheet_link_tag "application", :media => "all" %>
  <%= javascript_include_tag "application" %>
 
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
      <script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
      <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>


</head>
<body>
  <%= render 'layouts/nav' %>
  <%= flash[:notice] %>
  <div class="spacer-main">
    &nbsp;
    &nbsp;
  </div>

  <section class="container">
    <div class="grid">


      <%#= render 'layouts/messages' %>

      <%= yield %>

      <script type="text/javascript">
        // // Only executed our code once the DOM is ready.
        // window.onload = function() {
        //     // Get a reference to the canvas object
        //     var canvas = document.getElementById('myCanvas');
        //     // Create an empty project and a view for the canvas:
        //     paper.setup(canvas);

        //     var myPath = new paper.Path();
        //     myPath.strokeColor = 'black';

        //     // Draw the view now:
        //     paper.view.draw();

        //     var tool = new paper.Tool();

        //     tool.onMouseDown = function(event) {
        //         myPath.add(event.point);
        //     }




        window.onload = function() {
 
            var canvas = document.getElementById('myCanvas');
            paper.setup(canvas);

            // Let's get layers working
            var img = document.createElement('img');
            img.src = "/towerwall.jpg";
            img.id = "background-crag";
            var layer = new paper.Layer();
            var raster = new paper.Raster(img);
            // End Layers
            var secondLayer = new paper.Layer();
            secondLayer.activate();

            // debugger;


            var myPath = new paper.Path();
            myPath.strokeColor = 'red';
            myPath.strokeWidth = 2.5;


            // Draw the view now:
            paper.view.draw();

            var tool = new paper.Tool();

            tool.onMouseDown = function(event) {
                myPath.add(event.point);
            }

            tool.onMouseDrag = function(event) {
              myPath.add(event.point);

              // Update the content of the text item to show how many
              // segments it has:
              textItem.content = 'Segment count: ' + myPath.segments.length;
            }

            // When the mouse is released, we simplify the path:
            function onMouseUp(event) {
              var segmentCount = path.segments.length;

              // When the mouse is released, simplify it:
              myPath.simplify(10);

              // Select the path, so we can see its segments:
              myPath.fullySelected = true;

              var newSegmentCount = myPath.segments.length;
              var difference = segmentCount - newSegmentCount;
              var percentage = 100 - Math.round(newSegmentCount / segmentCount * 100);
              // textItem.content = difference + ' of the ' + segmentCount + ' segments were removed. Saving ' + percentage + '%';
            }



}
</script>




    </div>
  </section>


<script type='text/javascript'>
  var current_user = <%= @current_user ? @current_user.id : -1 %>;
</script>


</body>
</html>

